# Use GCC
CC:=gcc
CXX:=g++

# Warning flags for C and C++:
COMMON_FLAGS += -Wall -Wextra -pedantic -Werror
COMMON_FLAGS += -Wmissing-declarations -g
#COMMON_FLAGS += -Weverything

CFLAGS += ${COMMON_FLAGS}
CPPFLAGS += ${COMMON_FLAGS}

# These warnings are not valid for C++:
CFLAGS += -Wmissing-prototypes
CFLAGS += -Wstrict-prototypes

PROGRAMS_C=	example example_no_suite example_no_runner \
		example_shuffle example_trunc
EXE_C:=$(patsubst %,@.exe.%,$(PROGRAMS_C))
OBJ_C:=$(patsubst %,@.o.%,$(PROGRAMS_C))
#$(info $(EXE_C))

PROGRAMS_CPP=	example_cpp
EXE_CPP:=$(patsubst %,@.%,$(PROGRAMS_CPP))
OBJ_CPP:=$(patsubst %,@.o.%,$(PROGRAMS_CPP))
#$(info $(EXE_CPP))

# Uncomment to demo c99 parametric testing.
CFLAGS += -std=c99

# Uncomment to enable setjmp()/longjmp().
#CFLAGS += -DGREATEST_USE_LONGJMP=1

# Uncomment to disable clock() / time.h.
#CFLAGS += -DGREATEST_USE_TIME=0

.PHONY:all
all: all_c all_cpp

.PHONY:all_c
all_c: ${PROGRAMS_C}

.PHONY:all_cpp
all_cpp: ${PROGRAMS_CPP}

example: example.o example_suite.o
example_no_suite: example_no_suite.o
example_no_runner: example_no_runner.o
example_shuffle: example_shuffle.o
example_trunc: example_trunc.o

./o:
	IfThere @.o Then echo . ELSE cdir o

*.o: ./o MakefileGCC

example_cpp: example_cpp.cpp MakefileGCC
	${CXX} -o $@ example_cpp.cpp ${CPPFLAGS} ${LDFLAGS}
	Rename @.$@ @.$@/exe

%.o: %.c
	${CC} -c -o $@ ${CFLAGS} $<

%.o: %.cpp
	${CXX} -c -o $@ ${CPPFLAGS} $<

%: %.o
	${CC} -o $@ ${LDFLAGS} $^
	Rename @.$@ @.$@/exe

.PHONY:clean
clean:
	IfThere @.*/exe Then Wipe @.*/exe ~C F
	IfThere @.o.* Then Wipe @.o.* ~C F
	IfThere @.o Then Wipe @.o ~C F
